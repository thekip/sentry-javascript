{"version":3,"file":"offline.min.js","sources":["../../utils/src/node.ts","../../utils/src/env.ts","../../utils/src/global.ts","../../utils/src/is.ts","../../utils/src/browser.ts","../../utils/src/polyfill.ts","../../utils/src/error.ts","../../utils/src/logger.ts","../../utils/src/object.ts","../../utils/src/stacktrace.ts","../../utils/src/memo.ts","../../utils/src/instrument.ts","../../types/src/severity.ts","../../utils/src/misc.ts","../../utils/src/time.ts","../../../node_modules/localforage/dist/localforage.js","../src/offline.ts"],"sourcesContent":["/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\nimport { isBrowserBundle } from './env';\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv(): boolean {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nexport function dynamicRequire(mod: any, request: string): any {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nexport function loadModule<T>(moduleName: string): T | undefined {\n  let mod: T | undefined;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) as T;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n","/**\n * This module mostly exists for optimizations in the build process\n * through rollup and terser.  We define some global constants which\n * are normally undefined.  However terser overrides these with global\n * definitions which can be evaluated by the static analyzer when\n * creating a bundle.\n *\n * In turn the `isDebugBuild` and `isBrowserBundle` functions are pure\n * and can help us remove unused code from the bundles.\n */\n\ndeclare const __SENTRY_BROWSER_BUNDLE__: boolean | undefined;\ndeclare const __SENTRY_NO_DEBUG__: boolean | undefined;\n\n/**\n * Figures out if we're building with debug functionality.\n *\n * @returns true if this is a debug build\n */\nexport function isDebugBuild(): boolean {\n  return typeof __SENTRY_NO_DEBUG__ !== 'undefined' && !__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nexport function isBrowserBundle(): boolean {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n","/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { Integration } from '@sentry/types';\n\nimport { isNodeEnv } from './node';\n\n/** Internal */\ninterface SentryGlobal {\n  Sentry?: {\n    Integrations?: Integration[];\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  __SENTRY__: {\n    globalEventProcessors: any;\n    hub: any;\n    logger: any;\n  };\n}\n\nconst fallbackGlobalObject = {};\n\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nexport function getGlobalObject<T>(): T & SentryGlobal {\n  return (\n    isNodeEnv()\n      ? global\n      : typeof window !== 'undefined' // eslint-disable-line no-restricted-globals\n      ? window // eslint-disable-line no-restricted-globals\n      : typeof self !== 'undefined'\n      ? self\n      : fallbackGlobalObject\n  ) as T & SentryGlobal;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport { Primitive } from '@sentry/types';\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: unknown): boolean {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n\nfunction isBuiltin(wat: unknown, ty: string): boolean {\n  return objectToString.call(wat) === `[object ${ty}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: unknown): boolean {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: unknown): boolean {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: unknown): wat is Primitive {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: unknown): wat is Record<string, unknown> {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat: unknown): boolean {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat: unknown): boolean {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: unknown): wat is RegExp {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): wat is PromiseLike<any> {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: unknown): boolean {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat: any, base: any): boolean {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n","import { getGlobalObject } from './global';\nimport { isString } from './is';\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nexport function htmlTreeAsString(elem: unknown, keyAttrs?: string[]): string {\n  type SimpleNode = {\n    parentNode: SimpleNode;\n  } | null;\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem as SimpleNode;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const MAX_OUTPUT_LEN = 80;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n\n    // eslint-disable-next-line no-plusplus\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el: unknown, keyAttrs?: string[]): string {\n  const elem = el as {\n    tagName?: string;\n    id?: string;\n    className?: string;\n    getAttribute(key: string): string;\n  };\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    // eslint-disable-next-line prefer-const\n    className = elem.className;\n    if (className && isString(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  const allowedAttrs = ['type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nexport function getLocationHref(): string {\n  const global = getGlobalObject<Window>();\n  try {\n    return global.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n","export const setPrototypeOf =\n  Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties);\n\n/**\n * setPrototypeOf polyfill using __proto__\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction setProtoOf<TTarget extends object, TProto>(obj: TTarget, proto: TProto): TTarget & TProto {\n  // @ts-ignore __proto__ does not exist on obj\n  obj.__proto__ = proto;\n  return obj as TTarget & TProto;\n}\n\n/**\n * setPrototypeOf polyfill using mixin\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction mixinProperties<TTarget extends object, TProto>(obj: TTarget, proto: TProto): TTarget & TProto {\n  for (const prop in proto) {\n    if (!Object.prototype.hasOwnProperty.call(obj, prop)) {\n      // @ts-ignore typescript complains about indexing so we remove\n      obj[prop] = proto[prop];\n    }\n  }\n\n  return obj as TTarget & TProto;\n}\n","import { setPrototypeOf } from './polyfill';\n\n/** An error emitted by Sentry SDKs and related utilities. */\nexport class SentryError extends Error {\n  /** Display name of this error instance. */\n  public name: string;\n\n  public constructor(public message: string) {\n    super(message);\n\n    this.name = new.target.prototype.constructor.name;\n    setPrototypeOf(this, new.target.prototype);\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { WrappedFunction } from '@sentry/types';\n\nimport { getGlobalObject } from './global';\n\n// TODO: Implement different loggers for different environments\nconst global = getGlobalObject<Window | NodeJS.Global>();\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\n/** JSDoc */\ninterface ExtensibleConsole extends Console {\n  [key: string]: any;\n}\n\n/**\n * Temporarily unwrap `console.log` and friends in order to perform the given callback using the original methods.\n * Restores wrapping after the callback completes.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nexport function consoleSandbox(callback: () => any): any {\n  const global = getGlobalObject<Window>();\n  const levels = ['debug', 'info', 'warn', 'error', 'log', 'assert'];\n\n  if (!('console' in global)) {\n    return callback();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const originalConsole = (global as any).console as ExtensibleConsole;\n  const wrappedLevels: { [key: string]: any } = {};\n\n  // Restore all wrapped console methods\n  levels.forEach(level => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (level in (global as any).console && (originalConsole[level] as WrappedFunction).__sentry_original__) {\n      wrappedLevels[level] = originalConsole[level] as WrappedFunction;\n      originalConsole[level] = (originalConsole[level] as WrappedFunction).__sentry_original__;\n    }\n  });\n\n  // Perform callback manipulations\n  const result = callback();\n\n  // Revert restoration to wrapped state\n  Object.keys(wrappedLevels).forEach(level => {\n    originalConsole[level] = wrappedLevels[level];\n  });\n\n  return result;\n}\n\n/** JSDoc */\nclass Logger {\n  /** JSDoc */\n  private _enabled: boolean;\n\n  /** JSDoc */\n  public constructor() {\n    this._enabled = false;\n  }\n\n  /** JSDoc */\n  public disable(): void {\n    this._enabled = false;\n  }\n\n  /** JSDoc */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  /** JSDoc */\n  public log(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.log(`${PREFIX}[Log]: ${args.join(' ')}`);\n    });\n  }\n\n  /** JSDoc */\n  public warn(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.warn(`${PREFIX}[Warn]: ${args.join(' ')}`);\n    });\n  }\n\n  /** JSDoc */\n  public error(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.error(`${PREFIX}[Error]: ${args.join(' ')}`);\n    });\n  }\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nglobal.__SENTRY__ = global.__SENTRY__ || {};\nconst logger = (global.__SENTRY__.logger as Logger) || (global.__SENTRY__.logger = new Logger());\n\nexport { logger };\n","/* eslint-disable max-lines */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { ExtendedError, WrappedFunction } from '@sentry/types';\n\nimport { htmlTreeAsString } from './browser';\nimport { isElement, isError, isEvent, isInstanceOf, isPlainObject, isPrimitive, isSyntheticEvent } from './is';\nimport { memoBuilder, MemoFunc } from './memo';\nimport { getFunctionName } from './stacktrace';\nimport { truncate } from './string';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nexport function fill(source: { [key: string]: any }, name: string, replacementFactory: (...args: any[]) => any): void {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] as () => any;\n  const wrapped = replacementFactory(original) as WrappedFunction;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    try {\n      markFunctionWrapped(wrapped, original);\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non enumerable property.  This creates a non enumerable property on an object.\n *\n * @param func The function to set a property to\n * @param name the name of the special sentry property\n * @param value the property to define\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function addNonEnumerableProperty(func: any, name: string, value: any): void {\n  Object.defineProperty(func, name, {\n    value: value,\n  });\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nexport function markFunctionWrapped(wrapped: WrappedFunction, original: WrappedFunction): void {\n  const proto = original.prototype || {};\n  wrapped.prototype = original.prototype = proto;\n  addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nexport function getOriginalFunction(func: WrappedFunction): WrappedFunction | undefined {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object: { [key: string]: any }): string {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any object into an object literal with all its attributes\n * attached to it.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n */\nfunction getWalkSource(value: any): {\n  [key: string]: any;\n} {\n  if (isError(value)) {\n    const error = value as ExtendedError;\n    const err: {\n      [key: string]: any;\n      stack: string | undefined;\n      message: string;\n      name: string;\n    } = {\n      message: error.message,\n      name: error.name,\n      stack: error.stack,\n    };\n\n    for (const i in error) {\n      if (Object.prototype.hasOwnProperty.call(error, i)) {\n        err[i] = error[i];\n      }\n    }\n\n    return err;\n  }\n\n  if (isEvent(value)) {\n    /**\n     * Event-like interface that's usable in browser and node\n     */\n    interface SimpleEvent {\n      [key: string]: unknown;\n      type: string;\n      target?: unknown;\n      currentTarget?: unknown;\n    }\n\n    const event = value as unknown as SimpleEvent;\n\n    const source: {\n      [key: string]: any;\n    } = {};\n\n    // Accessing event attributes can throw (see https://github.com/getsentry/sentry-javascript/issues/768 and\n    // https://github.com/getsentry/sentry-javascript/issues/838), but accessing `type` hasn't been wrapped in a\n    // try-catch in at least two years and no one's complained, so that's likely not an issue anymore\n    source.type = event.type;\n\n    try {\n      source.target = isElement(event.target)\n        ? htmlTreeAsString(event.target)\n        : Object.prototype.toString.call(event.target);\n    } catch (_oO) {\n      source.target = '<unknown>';\n    }\n\n    try {\n      source.currentTarget = isElement(event.currentTarget)\n        ? htmlTreeAsString(event.currentTarget)\n        : Object.prototype.toString.call(event.currentTarget);\n    } catch (_oO) {\n      source.currentTarget = '<unknown>';\n    }\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      source.detail = event.detail;\n    }\n\n    for (const attr in event) {\n      if (Object.prototype.hasOwnProperty.call(event, attr)) {\n        source[attr] = event[attr];\n      }\n    }\n\n    return source;\n  }\n\n  return value as {\n    [key: string]: any;\n  };\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const serialized = normalize(object, depth);\n\n  if (jsonSize(serialized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return serialized as T;\n}\n\n/**\n * Transform any non-primitive, BigInt, or Symbol-type value into a string. Acts as a no-op on strings, numbers,\n * booleans, null, and undefined.\n *\n * @param value The value to stringify\n * @returns For non-primitive, BigInt, and Symbol-type values, a string denoting the value's type, type and value, or\n *  type and `description` property, respectively. For non-BigInt, non-Symbol primitives, returns the original value,\n *  unchanged.\n */\nfunction serializeValue(value: any): any {\n  // Node.js REPL notation\n  if (typeof value === 'string') {\n    return value;\n  }\n\n  const type = Object.prototype.toString.call(value);\n  if (type === '[object Object]') {\n    return '[Object]';\n  }\n  if (type === '[object Array]') {\n    return '[Array]';\n  }\n\n  const normalized = normalizeValue(value);\n  return isPrimitive(normalized) ? normalized : type;\n}\n\n/**\n * normalizeValue()\n *\n * Takes unserializable input and make it serializable friendly\n *\n * - translates undefined/NaN values to \"[undefined]\"/\"[NaN]\" respectively,\n * - serializes Error objects\n * - filter global objects\n */\nfunction normalizeValue<T>(value: T, key?: any): T | string {\n  if (key === 'domain' && value && typeof value === 'object' && (value as unknown as { _events: any })._events) {\n    return '[Domain]';\n  }\n\n  if (key === 'domainEmitter') {\n    return '[DomainEmitter]';\n  }\n\n  if (typeof (global as any) !== 'undefined' && (value as unknown) === global) {\n    return '[Global]';\n  }\n\n  // It's safe to use `window` and `document` here in this manner, as we are asserting using `typeof` first\n  // which won't throw if they are not present.\n\n  // eslint-disable-next-line no-restricted-globals\n  if (typeof (window as any) !== 'undefined' && (value as unknown) === window) {\n    return '[Window]';\n  }\n\n  // eslint-disable-next-line no-restricted-globals\n  if (typeof (document as any) !== 'undefined' && (value as unknown) === document) {\n    return '[Document]';\n  }\n\n  // React's SyntheticEvent thingy\n  if (isSyntheticEvent(value)) {\n    return '[SyntheticEvent]';\n  }\n\n  if (typeof value === 'number' && value !== value) {\n    return '[NaN]';\n  }\n\n  if (value === void 0) {\n    return '[undefined]';\n  }\n\n  if (typeof value === 'function') {\n    return `[Function: ${getFunctionName(value)}]`;\n  }\n\n  // symbols and bigints are considered primitives by TS, but aren't natively JSON-serilaizable\n\n  if (typeof value === 'symbol') {\n    return `[${String(value)}]`;\n  }\n\n  if (typeof value === 'bigint') {\n    return `[BigInt: ${String(value)}]`;\n  }\n\n  return value;\n}\n\n/**\n * Walks an object to perform a normalization on it\n *\n * @param key of object that's walked in current iteration\n * @param value object to be walked\n * @param depth Optional number indicating how deep should walking be performed\n * @param memo Optional Memo class handling decycling\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function walk(key: string, value: any, depth: number = +Infinity, memo: MemoFunc = memoBuilder()): any {\n  // If we reach the maximum depth, serialize whatever is left\n  if (depth === 0) {\n    return serializeValue(value);\n  }\n\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // If value implements `toJSON` method, call it and return early\n  if (value !== null && value !== undefined && typeof value.toJSON === 'function') {\n    return value.toJSON();\n  }\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n\n  // If normalized value is a primitive, there are no branches left to walk, so bail out\n  const normalized = normalizeValue(value, key);\n  if (isPrimitive(normalized)) {\n    return normalized;\n  }\n\n  // Create source that we will use for the next iteration. It will either be an objectified error object (`Error` type\n  // with extracted key:value pairs) or the input itself.\n  const source = getWalkSource(value);\n\n  // Create an accumulator that will act as a parent for all future itterations of that branch\n  const acc = Array.isArray(value) ? [] : {};\n\n  // If we already walked that branch, bail out, as it's circular reference\n  if (memo[0](value)) {\n    return '[Circular ~]';\n  }\n\n  // Walk all keys of the source\n  for (const innerKey in source) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(source, innerKey)) {\n      continue;\n    }\n    // Recursively walk through all the child nodes\n    (acc as { [key: string]: any })[innerKey] = walk(innerKey, source[innerKey], depth - 1, memo);\n  }\n\n  // Once walked through all the branches, remove the parent from memo storage\n  memo[1](value);\n\n  // Return accumulated values\n  return acc;\n}\n\n/**\n * normalize()\n *\n * - Creates a copy to prevent original input mutation\n * - Skip non-enumerablers\n * - Calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializeable values (undefined/NaN/Functions) to serializable format\n * - Translates known global objects/Classes to a string representations\n * - Takes care of Error objects serialization\n * - Optionally limit depth of final output\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function normalize(input: any, depth?: number): any {\n  try {\n    return JSON.parse(JSON.stringify(input, (key: string, value: any) => walk(key, value, depth)));\n  } catch (_oO) {\n    return '**non-serializable**';\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function extractExceptionKeysForMessage(exception: any, maxLength: number = 40): string {\n  const keys = Object.keys(getWalkSource(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return the new object with removed keys that value was `undefined`.\n * Works recursively on objects and arrays.\n */\nexport function dropUndefinedKeys<T>(val: T): T {\n  if (isPlainObject(val)) {\n    const obj = val as { [key: string]: any };\n    const rv: { [key: string]: any } = {};\n    for (const key of Object.keys(obj)) {\n      if (typeof obj[key] !== 'undefined') {\n        rv[key] = dropUndefinedKeys(obj[key]);\n      }\n    }\n    return rv as T;\n  }\n\n  if (Array.isArray(val)) {\n    return (val as any[]).map(dropUndefinedKeys) as any;\n  }\n\n  return val;\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nexport function objectify(wat: unknown): typeof Object {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat as any).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n","const defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nexport function getFunctionName(fn: unknown): string {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport type MemoFunc = [(obj: any) => boolean, (obj: any) => void];\n\n/**\n * Helper to decycle json objects\n */\nexport function memoBuilder(): MemoFunc {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner: any = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj: any): boolean {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj: any): void {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n","/* eslint-disable max-lines */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport { WrappedFunction } from '@sentry/types';\n\nimport { isDebugBuild } from './env';\nimport { getGlobalObject } from './global';\nimport { isInstanceOf, isString } from './is';\nimport { logger } from './logger';\nimport { fill } from './object';\nimport { getFunctionName } from './stacktrace';\nimport { supportsHistory, supportsNativeFetch } from './supports';\n\nconst global = getGlobalObject<Window>();\n\ntype InstrumentHandlerType =\n  | 'console'\n  | 'dom'\n  | 'fetch'\n  | 'history'\n  | 'sentry'\n  | 'xhr'\n  | 'error'\n  | 'unhandledrejection';\ntype InstrumentHandlerCallback = (data: any) => void;\n\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\n\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\n/** Instruments given API */\nfunction instrument(type: InstrumentHandlerType): void {\n  if (instrumented[type]) {\n    return;\n  }\n\n  instrumented[type] = true;\n\n  switch (type) {\n    case 'console':\n      instrumentConsole();\n      break;\n    case 'dom':\n      instrumentDOM();\n      break;\n    case 'xhr':\n      instrumentXHR();\n      break;\n    case 'fetch':\n      instrumentFetch();\n      break;\n    case 'history':\n      instrumentHistory();\n      break;\n    case 'error':\n      instrumentError();\n      break;\n    case 'unhandledrejection':\n      instrumentUnhandledRejection();\n      break;\n    default:\n      logger.warn('unknown instrumentation type:', type);\n  }\n}\n\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addInstrumentationHandler(type: InstrumentHandlerType, callback: InstrumentHandlerCallback): void {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] as InstrumentHandlerCallback[]).push(callback);\n  instrument(type);\n}\n\n/** JSDoc */\nfunction triggerHandlers(type: InstrumentHandlerType, data: any): void {\n  if (!type || !handlers[type]) {\n    return;\n  }\n\n  for (const handler of handlers[type] || []) {\n    try {\n      handler(data);\n    } catch (e) {\n      if (isDebugBuild()) {\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(\n            handler,\n          )}\\nError: ${e}`,\n        );\n      }\n    }\n  }\n}\n\n/** JSDoc */\nfunction instrumentConsole(): void {\n  if (!('console' in global)) {\n    return;\n  }\n\n  ['debug', 'info', 'warn', 'error', 'log', 'assert'].forEach(function (level: string): void {\n    if (!(level in global.console)) {\n      return;\n    }\n\n    fill(global.console, level, function (originalConsoleLevel: () => any): Function {\n      return function (...args: any[]): void {\n        triggerHandlers('console', { args, level });\n\n        // this fails for some browsers. :(\n        if (originalConsoleLevel) {\n          Function.prototype.apply.call(originalConsoleLevel, global.console, args);\n        }\n      };\n    });\n  });\n}\n\n/** JSDoc */\nfunction instrumentFetch(): void {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(global, 'fetch', function (originalFetch: () => void): () => void {\n    return function (...args: any[]): void {\n      const handlerData = {\n        args,\n        fetchData: {\n          method: getFetchMethod(args),\n          url: getFetchUrl(args),\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(global, args).then(\n        (response: Response) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          });\n          return response;\n        },\n        (error: Error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          });\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\ntype XHRSendInput = null | Blob | BufferSource | FormData | URLSearchParams | string;\n\n/** JSDoc */\ninterface SentryWrappedXMLHttpRequest extends XMLHttpRequest {\n  [key: string]: any;\n  __sentry_xhr__?: {\n    method?: string;\n    url?: string;\n    status_code?: number;\n    body?: XHRSendInput;\n  };\n}\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/** Extract `method` from fetch call arguments */\nfunction getFetchMethod(fetchArgs: any[] = []): string {\n  if ('Request' in global && isInstanceOf(fetchArgs[0], Request) && fetchArgs[0].method) {\n    return String(fetchArgs[0].method).toUpperCase();\n  }\n  if (fetchArgs[1] && fetchArgs[1].method) {\n    return String(fetchArgs[1].method).toUpperCase();\n  }\n  return 'GET';\n}\n\n/** Extract `url` from fetch call arguments */\nfunction getFetchUrl(fetchArgs: any[] = []): string {\n  if (typeof fetchArgs[0] === 'string') {\n    return fetchArgs[0];\n  }\n  if ('Request' in global && isInstanceOf(fetchArgs[0], Request)) {\n    return fetchArgs[0].url;\n  }\n  return String(fetchArgs[0]);\n}\n/* eslint-enable @typescript-eslint/no-unsafe-member-access */\n\n/** JSDoc */\nfunction instrumentXHR(): void {\n  if (!('XMLHttpRequest' in global)) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen: () => void): () => void {\n    return function (this: SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const xhr = this;\n      const url = args[1];\n      const xhrInfo: SentryWrappedXMLHttpRequest['__sentry_xhr__'] = (xhr.__sentry_xhr__ = {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n        url: args[1],\n      });\n\n      // if Sentry key appears in URL, don't capture it as a request\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      if (isString(url) && xhrInfo.method === 'POST' && url.match(/sentry_key/)) {\n        xhr.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler = function (): void {\n        if (xhr.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = xhr.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          triggerHandlers('xhr', {\n            args,\n            endTimestamp: Date.now(),\n            startTimestamp: Date.now(),\n            xhr,\n          });\n        }\n      };\n\n      if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n        fill(xhr, 'onreadystatechange', function (original: WrappedFunction): Function {\n          return function (...readyStateArgs: any[]): void {\n            onreadystatechangeHandler();\n            return original.apply(xhr, readyStateArgs);\n          };\n        });\n      } else {\n        xhr.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      return originalOpen.apply(xhr, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend: () => void): () => void {\n    return function (this: SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      if (this.__sentry_xhr__ && args[0] !== undefined) {\n        this.__sentry_xhr__.body = args[0];\n      }\n\n      triggerHandlers('xhr', {\n        args,\n        startTimestamp: Date.now(),\n        xhr: this,\n      });\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nlet lastHref: string;\n\n/** JSDoc */\nfunction instrumentHistory(): void {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = global.onpopstate;\n  global.onpopstate = function (this: WindowEventHandlers, ...args: any[]): any {\n    const to = global.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    triggerHandlers('history', {\n      from,\n      to,\n    });\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  /** @hidden */\n  function historyReplacementFunction(originalHistoryFunction: () => void): () => void {\n    return function (this: History, ...args: any[]): void {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        triggerHandlers('history', {\n          from,\n          to,\n        });\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(global.history, 'pushState', historyReplacementFunction);\n  fill(global.history, 'replaceState', historyReplacementFunction);\n}\n\nconst debounceDuration = 1000;\nlet debounceTimerID: number | undefined;\nlet lastCapturedEvent: Event | undefined;\n\n/**\n * Decide whether the current event should finish the debounce of previously captured one.\n * @param previous previously captured event\n * @param current event to be captured\n */\nfunction shouldShortcircuitPreviousDebounce(previous: Event | undefined, current: Event): boolean {\n  // If there was no previous event, it should always be swapped for the new one.\n  if (!previous) {\n    return true;\n  }\n\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (previous.type !== current.type) {\n    return true;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (previous.target !== current.target) {\n      return true;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return false;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(event: Event): boolean {\n  // We are only interested in filtering `keypress` events for now.\n  if (event.type !== 'keypress') {\n    return false;\n  }\n\n  try {\n    const target = event.target as HTMLElement;\n\n    if (!target || !target.tagName) {\n      return true;\n    }\n\n    // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n    // e.g.tabbing through elements, hotkeys, etc.\n    if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param handler function that will be triggered\n * @param globalListener indicates whether event was captured by the global event listener\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction makeDOMEventHandler(handler: Function, globalListener: boolean = false): (event: Event) => void {\n  return (event: Event): void => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event)) {\n      return;\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no debounce timer, it means that we can safely capture the new event and store it for future comparisons.\n    if (debounceTimerID === undefined) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n    // If there is a debounce awaiting, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    else if (shouldShortcircuitPreviousDebounce(lastCapturedEvent, event)) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = global.setTimeout(() => {\n      debounceTimerID = undefined;\n    }, debounceDuration);\n  };\n}\n\ntype AddEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions,\n) => void;\ntype RemoveEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | EventListenerOptions,\n) => void;\n\ntype InstrumentedElement = Element & {\n  __sentry_instrumentation_handlers__?: {\n    [key in 'click' | 'keypress']?: {\n      handler?: Function;\n      /** The number of custom listeners attached to this element */\n      refCount: number;\n    };\n  };\n};\n\n/** JSDoc */\nfunction instrumentDOM(): void {\n  if (!('document' in global)) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  global.document.addEventListener('click', globalDOMEventHandler, false);\n  global.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target: string) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = (global as any)[target] && (global as any)[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener: AddEventListener): AddEventListener {\n      return function (\n        this: Element,\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ): AddEventListener {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this as InstrumentedElement;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount += 1;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener: RemoveEventListener): RemoveEventListener {\n        return function (\n          this: Element,\n          type: string,\n          listener: EventListenerOrEventListenerObject,\n          options?: boolean | EventListenerOptions,\n        ): () => void {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const el = this as InstrumentedElement;\n              const handlers = el.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount -= 1;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\nlet _oldOnErrorHandler: OnErrorEventHandler = null;\n/** JSDoc */\nfunction instrumentError(): void {\n  _oldOnErrorHandler = global.onerror;\n\n  global.onerror = function (msg: any, url: any, line: any, column: any, error: any): boolean {\n    triggerHandlers('error', {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    });\n\n    if (_oldOnErrorHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n}\n\nlet _oldOnUnhandledRejectionHandler: ((e: any) => void) | null = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection(): void {\n  _oldOnUnhandledRejectionHandler = global.onunhandledrejection;\n\n  global.onunhandledrejection = function (e: any): boolean {\n    triggerHandlers('unhandledrejection', e);\n\n    if (_oldOnUnhandledRejectionHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n}\n","/**\n * TODO(v7): Remove this enum and replace with SeverityLevel\n */\nexport enum Severity {\n  /** JSDoc */\n  Fatal = 'fatal',\n  /** JSDoc */\n  Error = 'error',\n  /** JSDoc */\n  Warning = 'warning',\n  /** JSDoc */\n  Log = 'log',\n  /** JSDoc */\n  Info = 'info',\n  /** JSDoc */\n  Debug = 'debug',\n  /** JSDoc */\n  Critical = 'critical',\n}\n\n// TODO: in v7, these can disappear, because they now also exist in `@sentry/utils`. (Having them there rather than here\n// is nice because then it enforces the idea that only types are exported from `@sentry/types`.)\nexport const SeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug', 'critical'] as const;\nexport type SeverityLevel = typeof SeverityLevels[number];\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Event, Exception, Mechanism, StackFrame } from '@sentry/types';\n\nimport { getGlobalObject } from './global';\nimport { addNonEnumerableProperty } from './object';\nimport { snipLine } from './string';\n\n/**\n * Extended Window interface that allows for Crypto API usage in IE browsers\n */\ninterface MsCryptoWindow extends Window {\n  msCrypto?: Crypto;\n}\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4(): string {\n  const global = getGlobalObject() as MsCryptoWindow;\n  const crypto = global.crypto || global.msCrypto;\n\n  if (!(crypto === void 0) && crypto.getRandomValues) {\n    // Use window.crypto API if available\n    const arr = new Uint16Array(8);\n    crypto.getRandomValues(arr);\n\n    // set 4 in byte 7\n    // eslint-disable-next-line no-bitwise\n    arr[3] = (arr[3] & 0xfff) | 0x4000;\n    // set 2 most significant bits of byte 9 to '10'\n    // eslint-disable-next-line no-bitwise\n    arr[4] = (arr[4] & 0x3fff) | 0x8000;\n\n    const pad = (num: number): string => {\n      let v = num.toString(16);\n      while (v.length < 4) {\n        v = `0${v}`;\n      }\n      return v;\n    };\n\n    return (\n      pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7])\n    );\n  }\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    // eslint-disable-next-line no-bitwise\n    const r = (Math.random() * 16) | 0;\n    // eslint-disable-next-line no-bitwise\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(url: string): {\n  host?: string;\n  path?: string;\n  protocol?: string;\n  relative?: string;\n} {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\nfunction getFirstException(event: Event): Exception | undefined {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nexport function addExceptionMechanism(event: Event, newMechanism?: Partial<Mechanism>): void {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\ninterface SemVer {\n  major?: number;\n  minor?: number;\n  patch?: number;\n  prerelease?: string;\n  buildmetadata?: string;\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input: string): SemVer {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\nconst defaultRetryAfter = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param now current unix timestamp\n * @param header string representation of 'Retry-After' header\n */\nexport function parseRetryAfterHeader(now: number, header?: string | number | null): number {\n  if (!header) {\n    return defaultRetryAfter;\n  }\n\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return defaultRetryAfter;\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext: number = 5): void {\n  const lineno = frame.lineno || 0;\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines, lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nexport function stripUrlQueryAndFragment(urlPath: string): string {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nexport function checkOrSetAlreadyCaught(exception: unknown): boolean {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception as any).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception, '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n","import { getGlobalObject } from './global';\nimport { dynamicRequire, isNodeEnv } from './node';\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\ninterface TimestampSource {\n  nowSeconds(): number;\n}\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nconst dateTimestampSource: TimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\ninterface Performance {\n  /**\n   * The millisecond timestamp at which measurement began, measured in Unix time.\n   */\n  timeOrigin: number;\n  /**\n   * Returns the current millisecond timestamp, where 0 represents the start of measurement.\n   */\n  now(): number;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance(): Performance | undefined {\n  const { performance } = getGlobalObject<Window>();\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  const timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance(): Performance | undefined {\n  try {\n    const perfHooks = dynamicRequire(module, 'perf_hooks') as { performance: Performance };\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nconst platformPerformance: Performance | undefined = isNodeEnv() ? getNodePerformance() : getBrowserPerformance();\n\nconst timestampSource: TimestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nexport const dateTimestampInSeconds: () => number = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nexport const timestampInSeconds: () => number = timestampSource.nowSeconds.bind(timestampSource);\n\n// Re-exported with an old name for backwards-compatibility.\nexport const timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nexport const usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nexport let _browserPerformanceTimeOriginMode: string;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nexport const browserPerformanceTimeOrigin = ((): number | undefined => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = getGlobalObject<Window>();\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.9.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = req.onblocked = function (err) {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(err);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { Event, EventProcessor, Hub, Integration } from '@sentry/types';\nimport { getGlobalObject, logger, normalize, uuid4 } from '@sentry/utils';\nimport localForage from 'localforage';\n\ntype LocalForage = {\n  setItem<T>(key: string, value: T, callback?: (err: any, value: T) => void): Promise<T>;\n  iterate<T, U>(\n    iteratee: (value: T, key: string, iterationNumber: number) => U,\n    callback?: (err: any, result: U) => void,\n  ): Promise<U>;\n  removeItem(key: string, callback?: (err: any) => void): Promise<void>;\n};\n\n/**\n * cache offline errors and send when connected\n */\nexport class Offline implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Offline';\n\n  /**\n   * @inheritDoc\n   */\n  public readonly name: string = Offline.id;\n\n  /**\n   * the global instance\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public global: any;\n\n  /**\n   * the current hub instance\n   */\n  public hub?: Hub;\n\n  /**\n   * maximum number of events to store while offline\n   */\n  public maxStoredEvents: number;\n\n  /**\n   * event cache\n   */\n  public offlineEventStore: LocalForage;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { maxStoredEvents?: number } = {}) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this.global = getGlobalObject<any>();\n    this.maxStoredEvents = options.maxStoredEvents || 30; // set a reasonable default\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    this.offlineEventStore = localForage.createInstance({\n      name: 'sentry/offlineEventStore',\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    this.hub = getCurrentHub();\n\n    if ('addEventListener' in this.global) {\n      this.global.addEventListener('online', () => {\n        void this._sendEvents().catch(() => {\n          logger.warn('could not send cached events');\n        });\n      });\n    }\n\n    addGlobalEventProcessor((event: Event) => {\n      if (this.hub && this.hub.getIntegration(Offline)) {\n        // cache if we are positively offline\n        if ('navigator' in this.global && 'onLine' in this.global.navigator && !this.global.navigator.onLine) {\n          void this._cacheEvent(event)\n            .then((_event: Event): Promise<void> => this._enforceMaxEvents())\n            .catch((_error): void => {\n              logger.warn('could not cache event while offline');\n            });\n\n          // return null on success or failure, because being offline will still result in an error\n          return null;\n        }\n      }\n\n      return event;\n    });\n\n    // if online now, send any events stored in a previous offline session\n    if ('navigator' in this.global && 'onLine' in this.global.navigator && this.global.navigator.onLine) {\n      void this._sendEvents().catch(() => {\n        logger.warn('could not send cached events');\n      });\n    }\n  }\n\n  /**\n   * cache an event to send later\n   * @param event an event\n   */\n  private async _cacheEvent(event: Event): Promise<Event> {\n    return this.offlineEventStore.setItem<Event>(uuid4(), normalize(event));\n  }\n\n  /**\n   * purge excess events if necessary\n   */\n  private async _enforceMaxEvents(): Promise<void> {\n    const events: Array<{ event: Event; cacheKey: string }> = [];\n\n    return this.offlineEventStore\n      .iterate<Event, void>((event: Event, cacheKey: string, _index: number): void => {\n        // aggregate events\n        events.push({ cacheKey, event });\n      })\n      .then(\n        (): Promise<void> =>\n          // this promise resolves when the iteration is finished\n          this._purgeEvents(\n            // purge all events past maxStoredEvents in reverse chronological order\n            events\n              .sort((a, b) => (b.event.timestamp || 0) - (a.event.timestamp || 0))\n              .slice(this.maxStoredEvents < events.length ? this.maxStoredEvents : events.length)\n              .map(event => event.cacheKey),\n          ),\n      )\n      .catch((_error): void => {\n        logger.warn('could not enforce max events');\n      });\n  }\n\n  /**\n   * purge event from cache\n   */\n  private async _purgeEvent(cacheKey: string): Promise<void> {\n    return this.offlineEventStore.removeItem(cacheKey);\n  }\n\n  /**\n   * purge events from cache\n   */\n  private async _purgeEvents(cacheKeys: string[]): Promise<void> {\n    // trail with .then to ensure the return type as void and not void|void[]\n    return Promise.all(cacheKeys.map(cacheKey => this._purgeEvent(cacheKey))).then();\n  }\n\n  /**\n   * send all events\n   */\n  private async _sendEvents(): Promise<void> {\n    return this.offlineEventStore.iterate<Event, void>((event: Event, cacheKey: string, _index: number): void => {\n      if (this.hub) {\n        this.hub.captureEvent(event);\n\n        void this._purgeEvent(cacheKey).catch((_error): void => {\n          logger.warn('could not purge event from cache');\n        });\n      } else {\n        logger.warn('no hub found - could not send cached event');\n      }\n    });\n  }\n}\n"],"names":["isNodeEnv","__SENTRY_BROWSER_BUNDLE__","Object","prototype","toString","call","process","fallbackGlobalObject","getGlobalObject","global","window","self","objectToString","isBuiltin","wat","ty","isPrimitive","isElement","Element","isInstanceOf","isSyntheticEvent","isPlainObject","base","_e","htmlTreeAsString","elem","keyAttrs","currentElem","out","height","len","sepLength","length","nextStr","_htmlElementAsString","push","parentNode","reverse","join","_oO","el","className","classes","key","attr","i","tagName","toLowerCase","keyAttrPairs","filter","keyAttr","getAttribute","map","forEach","keyAttrPair","id","split","allowedAttrs","setPrototypeOf","__proto__","Array","obj","proto","prop","hasOwnProperty","message","_super","_this","name","_newTarget","constructor","__extends","Error","PREFIX","consoleSandbox","callback","originalConsole","console","wrappedLevels","level","__sentry_original__","result","keys","this","_enabled","Logger","_i","args","log","warn","error","__SENTRY__","logger","getWalkSource","value","isError","err","stack","Event","event_1","source","type","target","currentTarget","CustomEvent","detail","normalizeValue","_events","document","fn","e","getFunctionName","String","walk","depth","memo","hasWeakSet","inner","Infinity","WeakSet","has","add","delete","splice","normalized","serializeValue","toJSON","acc","isArray","innerKey","normalize","input","JSON","parse","stringify","Severity","uuid4","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","num","v","replace","c","r","Math","random","dateTimestampSource","nowSeconds","Date","now","platformPerformance","mod","module","request","require","performance","_","getNodePerformance","timeOrigin","getBrowserPerformance","timestampSource","undefined","bind","performanceNow","dateNow","timeOriginDelta","abs","timeOriginIsReliable","navigationStart","timing","navigationStartDelta","t","n","s","o","u","f","code","l","exports","1","_dereq_","scheduleDrain","draining","Mutation","MutationObserver","WebKitMutationObserver","called","observer","nextTick","element","createTextNode","observe","characterData","data","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","postMessage","queue","oldQueue","task","2","immediate","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","Promise","resolver","TypeError","state","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","returnValue","reject","resolve","getThen","then","apply","arguments","thenable","onError","onSuccess","tryCatch","status","reason","all","iterable","values","resolved","allResolver","outValue","race","response","3","4","_typeof","Symbol","iterator","idb","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","getIDB","createBlob","parts","properties","Blob","builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","append","getBlob","Promise$1","executeCallback","executeTwoCallbacks","errorCallback","normalizeKey","getCallback","supportsBlobs","dbContexts","_checkBlobSupport","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","navigator","userAgent","match","matchedEdge","parseInt","_checkBlobSupportWithoutCaching","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","_getConnection","upgradeNeeded","forages","db","close","dbArgs","version","openreq","open","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_decodeBlob","encodedBlob","bin","buf","ArrayBuffer","Uint8Array","charCodeAt","_binStringToArrayBuffer","atob","_isEncodedBlob","__local_forage_encoded_blob","_fullyReady","_initReady","_dbInfo","createTransaction","mode","retries","tx","forage","_tryReconnect","asyncStorage","_driver","_initStorage","options","ready","initPromises","ignoreErrors","j","slice","_defaultConfig","k","_support","isSafari","openDatabase","test","platform","hasFetch","fetch","indexOf","IDBKeyRange","isIndexedDBValid","iterate","req","openCursor","iterationNumber","cursor","getItem","get","setItem","blobSupport","reader","FileReader","onloadend","base64","btoa","readAsBinaryString","store","removeItem","clear","count","advanced","openKeyCursor","advance","dropInstance","currentConfig","config","isCurrentDb","dbPromise","deleteObjectStore","_forage2","deleteDatabase","onblocked","BASE_CHARS","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER_LENGTH","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","p","buffer","bytes","bufferToString","base64String","substring","localforageSerializer","serialize","valueType","marker","fileReader","onload","str","SERIALIZED_MARKER","readAsArrayBuffer","deserialize","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Int32Array","Uint32Array","Float32Array","Float64Array","createDbTable","executeSql","tryExecuteSql","sqlStatement","SYNTAX_ERR","results","rows","_setItem","retriesLeft","originalValue","serializer","sqlError","QUOTA_ERR","getAllStoreNames","storeNames","item","webSQLStorage","dbInfoPromise","description","size","operationInfo","dropTable","operations","_getKeyPrefix","defaultConfig","keyPrefix","_isLocalStorageUsable","localStorage","checkIfLocalStorageThrows","localStorageWrapper","isLocalStorageValid","keyPrefixLength","itemKey","includes","array","searchElement","x","y","isNaN","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","localforage_js","LocalForage","driverTypeKey","instance","Constructor","_classCallCheck","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","driverObject","complianceError","driverMethods","driverMethodName","methodNotImplementedFactory","methodName","_len","optionalDriverMethod","configureMissingMethods","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","oldDriverSetDone","currentDriverIndex","driverPromiseLoop","initDriver","supports","libraryMethodsAndProperties","createInstance","Offline","maxStoredEvents","offlineEventStore","localForage","addGlobalEventProcessor","getCurrentHub","hub","addEventListener","_sendEvents","catch","event","getIntegration","onLine","_cacheEvent","_event","_enforceMaxEvents","_error","events","cacheKey","_index","_purgeEvents","sort","a","b","timestamp","cacheKeys","_purgeEvent","captureEvent"],"mappings":"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"}